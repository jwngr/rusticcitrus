!function(){"use strict";var e=function(){function e(e,t,s){RC.debug&&(RC.assert("object"==typeof e,"papers is not an object"),RC.assert("number"==typeof t,"numLetters is not a number")),this.singlePlayerGamesListIndex=t-RC.smallestNumLetters,this.gameType="singlePlayer",this.papers=e,this.numLetters=t,this.currentRound=null,void 0===s?(this.score=0,this.numRoundsCompleted=0,this.numWordsFound=0,this.pastRoundWords=[],this.numConsecutivePerfectRounds=0,this.dateCreated=(new Date).toString(),this.dateModified=(new Date).toString()):(RC.debug&&(RC.assert("object"==typeof s,"loadGameData is not an object"),RC.assert("number"==typeof s.score,"score is not a number"),RC.assert("number"==typeof s.numRoundsCompleted,"numRoundsCompleted is not a number"),RC.assert("number"==typeof s.numWordsFound,"numWordsFound is not a number"),RC.assert("object"==typeof s.pastRoundWords,"pastRoundWords is not an object"),RC.assert("number"==typeof s.numConsecutivePerfectRounds,"numConsecutivePerfectRounds is not a number"),RC.assert("string"==typeof s.dateCreated,"dateCreated is not a string"),RC.assert("string"==typeof s.dateModified,"dateModified is not a string")),this.score=s.score,this.numRoundsCompleted=s.numRoundsCompleted,this.numWordsFound=s.numWordsFound,this.pastRoundWords=s.pastRoundWords,this.numConsecutivePerfectRounds=s.numConsecutivePerfectRounds,this.dateCreated=s.dateCreated,this.dateModified=s.dateModified)}return e.prototype.createRound=function(e,t){this.currentRound=new RC.Classes.Round(this,this.numLetters,e,t)},e.prototype.saveToFirebase=function(e){RC.debug&&(RC.assert("number"==typeof this.score,"score is not a number"),RC.assert("number"==typeof this.numLetters,"numLetters is not a number"),RC.assert("number"==typeof this.numRoundsCompleted,"numRoundsCompleted is not a number"),RC.assert("number"==typeof this.numWordsFound,"numWordsFound is not a number"),RC.assert("object"==typeof this.pastRoundWords,"pastRoundWords is not an object"),RC.assert("number"==typeof this.numConsecutivePerfectRounds,"numConsecutivePerfectRounds is not a number"),RC.assert("string"==typeof this.dateCreated,"dateCreated is not a string"),RC.assert("string"==typeof this.dateModified,"dateModified is not a string")),e?(RC.firebaseRoot.child("users/"+RC.loggedInUser.id+"/games/singlePlayer/completed/").push({score:this.score,numLetters:this.numLetters,numRoundsCompleted:this.numRoundsCompleted,numWordsFound:this.numWordsFound,dateCreated:this.dateCreated,dateModified:(new Date).toString()}),RC.firebaseRoot.child("users/"+RC.loggedInUser.id+"/games/singlePlayer/active/"+(this.numLetters-5)).set({numLetters:this.numLetters})):(RC.debug&&(RC.assert("object"==typeof this.currentRound,"currentRound is not an object"),RC.assert("string"==typeof this.currentRound.word,"word is not a string"),RC.assert("number"==typeof this.currentRound.secondsRemaining,"secondsRemaining is not a number"),RC.assert("object"==typeof this.currentRound.foundWords,"foundWords is not an object"),RC.assert("object"==typeof this.currentRound.subsetWords,"subsetWords is not an object")),RC.firebaseRoot.child("users/"+RC.loggedInUser.id+"/games/singlePlayer/active/"+(this.numLetters-5)).set({score:this.score,numLetters:this.numLetters,numRoundsCompleted:this.numRoundsCompleted,numWordsFound:this.numWordsFound,pastRoundWords:this.pastRoundWords,numConsecutivePerfectRounds:this.numConsecutivePerfectRounds,dateCreated:this.dateCreated,dateModified:(new Date).toString(),currentRound:{secondsRemaining:this.currentRound.secondsRemaining,word:this.currentRound.word,foundWords:this.currentRound.foundWords},startNewRound:0===this.currentRound.secondsRemaining||this.currentRound.foundWords.length===this.currentRound.subsetWords.length}))},e.prototype.end=function(e,t){this.saveToFirebase(!0);var s={numLetters:this.numLetters};RC.SinglePlayerGames.dataSource.change(this.singlePlayerGamesListIndex.toString(),s,this.singlePlayerGamesListIndex),RC.SinglePlayerGames.list[this.singlePlayerGamesListIndex]=s,RC.SinglePlayerGames.updateFile(),e&&RC.HighScores.insertNewScore({score:this.score,numLetters:this.numLetters,numRoundsCompleted:this.numRoundsCompleted,numWordsFound:this.numWordsFound,dateCreated:(new Date).toString()}),t&&t()},e}(),t=function(){function e(e,t){RC.debug&&(RC.assert("object"==typeof t,"gameData is not an object"),RC.assert("string"==typeof t.gameId,"gameId is not a string"),RC.assert("string"==typeof t.creatorId,"creatorId is not a string"),RC.assert("string"==typeof t.opponentId,"opponentId is not a string"),RC.assert("object"==typeof t.currentRound,"currentRound is not an object"),RC.assert("string"==typeof t.currentRound.word,"word is not a string"),RC.assert("number"==typeof t.currentRound.numLetters,"numLetters is not a number"),RC.assert("number"==typeof t.currentRound.roundIndex,"roundIndex is not a number")),this.score=0,this.papers=e,this.gameType="multiplayer",this.gameId=t.gameId,this.creatorId=t.creatorId,this.opponentId=t.opponentId,this.numLetters=t.currentRound.numLetters,this.numRoundsCompleted=t.currentRound.roundIndex}return e.prototype.createRound=function(e){this.currentRound=new RC.Classes.Round(this,e.numLetters,10,{word:e.word,foundWords:[],startRoundPaused:!1,startRoundDone:!1})},e.prototype.saveToFirebase=function(){RC.debug&&(RC.assert("number"==typeof this.score,"score is not a number"),RC.assert("string"==typeof this.gameId,"gameId is not a string"),RC.assert("string"==typeof this.creatorId,"creatorId is not a string"),RC.assert("string"==typeof this.opponentId,"opponentId is not a string"),RC.assert("object"==typeof this.currentRound,"currentRound is not an object"),RC.assert("object"==typeof this.currentRound.foundWords,"foundWords is not an object"));var e=this.creatorId===RC.loggedInUser.id?"creator":"opponent";this.creatorId===RC.loggedInUser.id?this.opponentId:this.creatorId;var t=this.numLetters-RC.smallestNumLetters,s=RC.firebaseRoot.child("users/"+RC.loggedInUser.id+"/games/multiplayer/active/"+this.gameId+"/");this.numLetters==RC.smallestNumLetters?(s.child(e+"/scores/").set([this.score]),s.child(e+"/foundWords/").set([this.currentRound.foundWords.join(",")])):(s.child(e+"/scores/"+t).set(this.score),s.child(e+"/foundWords/"+t).set(this.currentRound.foundWords.join(",")))},e.prototype.end=function(){this.saveToFirebase(!0),RC.MultiplayerGames.yourTurnDataSource.invalidateAll(),RC.MultiplayerGames.theirTurnDataSource.invalidateAll(),WinJS.Navigation.back(1)},e}();WinJS.Namespace.defineWithParent(RC,"Classes",{SinglePlayerGame:e,MultiplayerGame:t})}();